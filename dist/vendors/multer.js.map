{"version":3,"file":"multer.js","sourceRoot":"","sources":["../../src/vendors/multer.ts"],"names":[],"mappings":";;;;;;AAAA,4FAAmE;AACnE,oDAA4B;AAC5B,0DAA6B;AAC7B,+BAAkC;AAClC,MAAM,IAAI,GAAG,mBAAI,CAAC,IAAI,CAAC,SAAS,EAAE,sBAAsB,CAAC,CAAC;AAE7C,QAAA,OAAO,GAAG,gBAAM,CAAC,WAAW,CAAC;IACxC,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;QACvB,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACxB,CAAC;IACD,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;QACpB,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,MAAM,aAAa,GAAG,cAAc,CAAC;QAErC,MAAM,QAAQ,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAC3C,aAAa,EACb,IAAI,CACL,IAAI,IAAA,SAAI,GAAE,IAAI,GAAG,EAAE,CAAC;QACrB,OAAO,EAAE,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC5B,CAAC;CACF,CAAC,CAAC;AAEH,cAAc;AACD,QAAA,WAAW,GAAG,IAAA,gBAAM,EAAC;IAChC,OAAO,EAAP,eAAO;IACP,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;QACtB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC;YACvC,OAAO,EAAE,CAAC,IAAI,wBAAa,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC,CAAC;QACtD,CAAC;QAED,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACxB,CAAC;IACD,MAAM,EAAE;QACN,QAAQ,EAAE,IAAI,GAAG,IAAI,GAAG,CAAC,EAAE,MAAM;KAClC;CACF,CAAC,CAAC;AAEH,4BAA4B;AACf,QAAA,UAAU,GAAG,IAAA,gBAAM,EAAC;IAC/B,OAAO,EAAP,eAAO;IACP,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;QACtB,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC;YACtC,OAAO,EAAE,CAAC,IAAI,wBAAa,CAAC,GAAG,EAAE,sBAAsB,CAAC,CAAC,CAAC;QAC5D,CAAC;QAED,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACxB,CAAC;IACD,MAAM,EAAE;QACN,QAAQ,EAAE,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE,OAAO;KACpC;CACF,CAAC,CAAC;AAEH,0BAA0B;AACb,QAAA,WAAW,GAAG,IAAA,gBAAM,EAAC;IAChC,OAAO,EAAP,eAAO;IACP,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;QACtB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC;YACvC,OAAO,EAAE,CAAC,IAAI,wBAAa,CAAC,GAAG,EAAE,sBAAsB,CAAC,CAAC,CAAC;QAC5D,CAAC;QAED,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACxB,CAAC;IACD,MAAM,EAAE;QACN,QAAQ,EAAE,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE,OAAO;KACpC;CACF,CAAC,CAAC","sourcesContent":["import HttpException from \"@/api/common/exceptions/http.exception\";\nimport multer from \"multer\";\nimport path from \"node:path\";\nimport { v4 as uuid } from \"uuid\";\nconst dest = path.join(__dirname, \"../../public/uploads\");\n\nexport const storage = multer.diskStorage({\n  destination(req, file, cb) {\n    return cb(null, dest);\n  },\n  filename(req, file, cb) {\n    const ext = file.mimetype.split(\"/\")[1];\n    const fileNameRegex = /(.+)(\\..+)/gm;\n\n    const filename = `${file.originalname.replace(\n      fileNameRegex,\n      \"$1\"\n    )}-${uuid()}.${ext}`;\n    return cb(null, filename);\n  },\n});\n\n/** 이미지 업로드 */\nexport const imageUpload = multer({\n  storage,\n  fileFilter(req, file, cb) {\n    if (!file.mimetype.startsWith(\"image\")) {\n      return cb(new HttpException(400, \"이미지 파일만 업로드해라잉\"));\n    }\n\n    return cb(null, true);\n  },\n  limits: {\n    fileSize: 1024 * 1024 * 5, // 5MB\n  },\n});\n\n/** 이미지 제외한 파일 업로드 하는 멀터  */\nexport const fileUpload = multer({\n  storage,\n  fileFilter(req, file, cb) {\n    if (file.mimetype.startsWith(\"image\")) {\n      return cb(new HttpException(400, \"이미지 파일은 업로드할 수 없습니다.\"));\n    }\n\n    return cb(null, true);\n  },\n  limits: {\n    fileSize: 1024 * 1024 * 10, // 10MB\n  },\n});\n\n/** 비디오만 업로드 가능하게 하는 멀터 */\nexport const videoUpload = multer({\n  storage,\n  fileFilter(req, file, cb) {\n    if (!file.mimetype.startsWith(\"video\")) {\n      return cb(new HttpException(400, \"비디오 파일만 업로드할 수 있습니다.\"));\n    }\n\n    return cb(null, true);\n  },\n  limits: {\n    fileSize: 1024 * 1024 * 50, // 50MB\n  },\n});\n"]}