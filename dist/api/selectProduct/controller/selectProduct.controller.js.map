{"version":3,"file":"selectProduct.controller.js","sourceRoot":"","sources":["../../../../src/api/selectProduct/controller/selectProduct.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\nimport { SelectProductService } from \"@/api/selectProduct/service/selectProduct.service.type\";\n\nexport default class SelectProductController {\n  constructor(private readonly _selectProductService: SelectProductService) {\n    this.createSelectProduct = this.createSelectProduct.bind(this);\n    this.updateSelectProduct = this.updateSelectProduct.bind(this);\n    this.deleteSelectProduct = this.deleteSelectProduct.bind(this);\n    this.getSelectProducts = this.getSelectProducts.bind(this);\n    this.getSelectProduct = this.getSelectProduct.bind(this);\n  }\n\n  /** 선택 상품 생성 */\n  async createSelectProduct(req: Request, res: Response, next: NextFunction) {\n    try {\n      const selectProduct =\n        await this._selectProductService.createSelectProduct({\n          name: req.body.name,\n          price: req.body.price,\n          description: req.body.description,\n        });\n      res.status(200).json(selectProduct);\n    } catch (error) {\n      res.status(409).json({ message: \"선택 상품 생성 실패\" });\n    }\n  }\n\n  /** 선택 상품 수정 */\n  async updateSelectProduct(req: Request, res: Response, next: NextFunction) {\n    try {\n      const updateData = { ...req.body };\n\n      const selectProduct =\n        await this._selectProductService.updateSelectProduct(\n          req.params.selectProductId,\n          updateData\n        );\n\n      res.status(200).json({\n        message: \"주문 수정 성공\",\n        data: selectProduct,\n      });\n    } catch (error) {\n      res.status(409).json({ message: \"선택 상품 수정 실패\" });\n    }\n  }\n\n  /** 선택 상품 삭제 */\n  async deleteSelectProduct(req: Request, res: Response, next: NextFunction) {\n    try {\n      const { selectProductId } = req.params;\n      await this._selectProductService.deleteSelectProduct(selectProductId);\n\n      res.status(200).json({ message: \"선택 상품 삭제 성공\" });\n    } catch (error) {\n      res.status(404).json({ message: \"선택 상품 삭제 실패\" });\n    }\n  }\n\n  /** 선택 상품 조회 */\n  async getSelectProducts(req: Request, res: Response, next: NextFunction) {\n    try {\n      const selectProducts =\n        await this._selectProductService.getSelectProducts();\n\n      res.status(200).json({\n        message: \"선택 상품 조회 성공\",\n        data: selectProducts,\n      });\n    } catch (error) {\n      res.status(400).json({ message: \"선택 상품 목록 조회 실패\" });\n      next(error);\n    }\n  }\n\n  /** 선택 상품 상세 조회 */\n  async getSelectProduct(req: Request, res: Response, next: NextFunction) {\n    try {\n      const { selectProductId } = req.params;\n\n      const selectProduct = await this._selectProductService.getSelectProduct(\n        selectProductId\n      );\n\n      res.status(200).json({\n        message: \"선택 상품 조회 성공\",\n        data: selectProduct,\n      });\n    } catch (error) {\n      res.status(404).json({ message: \"선택 상품 조회 실패\" });\n    }\n  }\n}\n"]}