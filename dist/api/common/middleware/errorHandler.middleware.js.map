{"version":3,"file":"errorHandler.middleware.js","sourceRoot":"","sources":["../../../../src/api/common/middleware/errorHandler.middleware.ts"],"names":[],"mappings":";;;;;AACA,kFAAyD;AAEzD,SAAS,YAAY,CACnB,GAAmC,EACnC,GAAY,EACZ,GAAa,EACb,IAAkB;IAElB,IAAI,GAAG,YAAY,wBAAa,EAAE,CAAC;QACjC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;YACrC,OAAO,EAAE,cAAc;YACvB,OAAO,EAAE,GAAG,CAAC,OAAO;YACpB,IAAI,EAAE,GAAG,CAAC,KAAK;SAChB,CAAC,CAAC;IACL,CAAC;IAED,IAAI,GAAG,YAAY,KAAK,EAAE,CAAC;QACzB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,OAAO,EAAE,uBAAuB;YAChC,OAAO,EAAE,GAAG,CAAC,OAAO;SACrB,CAAC,CAAC;IACL,CAAC;IACD,IAAI,EAAE,CAAC;AACT,CAAC;AAED,kBAAe,YAAY,CAAC","sourcesContent":["import { NextFunction, Request, Response } from \"express\";\nimport HttpException from \"../exceptions/http.exception\";\n\nfunction errorHandler(\n  err: Error & { statusCode: number },\n  req: Request,\n  res: Response,\n  next: NextFunction\n): Response | void {\n  if (err instanceof HttpException) {\n    return res.status(err.statusCode).send({\n      message: \"client Error\",\n      details: err.message,\n      code: err.cause,\n    });\n  }\n\n  if (err instanceof Error) {\n    res.status(500).send({\n      message: \"Internal Server Error\",\n      details: err.message,\n    });\n  }\n  next();\n}\n\nexport default errorHandler;\n"]}